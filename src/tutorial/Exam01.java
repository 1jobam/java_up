package tutorial;

public class Exam01 {
	
	public static void main(String[] args) {
		
/*
 			*** Collection 인테페이스 ***
---------------------------------------------------------
	bolean add(Object o)
	boolean addAll(Collection c)
	
	지정된 객체(o)또는 Collection(c)의 객체들을 Collection에 추가한다.
---------------------------------------------------------
	void clear()
	
	Collection의 모든 객체를 삭제한다.
---------------------------------------------------------
	boolean contains(Object o)
	boolean containsAll(Collection c)
	
	지정된 객체(o) 또는 Collection의 객체들이 Collection에 포함되어 있는지
	확인한다.
---------------------------------------------------------
	boolean equals(Object o)
	
	동일한 Collection인지 비교한다.
---------------------------------------------------------
	int hashCode()
	
	Collection의 hash code를 반환한다.
---------------------------------------------------------
	boolean isEmpty()
	
	Collection이 비어있는지 확인한다.
---------------------------------------------------------
	lterator iterator()
	
	Collection의 lterator를 얻어서 반환한다.
---------------------------------------------------------
	boolean remove(Object o)
	
	지정된 객체를 삭제한다.
---------------------------------------------------------
	boolean removeAll(Collection c)
	
	지정된 Collection에 포함된 객체들을 삭제한다.
---------------------------------------------------------
	boolean retainAll(Collection c)
	
	지정된  Collection에 포함된 객체만을 남기고 다른 객체들은
	Collection 에서 삭제한다. 이작업으로 인해 Collection에 변화가
	있으면 true를 그렇지 않으면 false를 반환한다.
---------------------------------------------------------
	int size()
	
	Collection에 저장된 객체의 개수를 반환한다.
---------------------------------------------------------
	Object[] toArray()
	
	Collection에 저장된 객체를 객체배열(Object[])로 반환한다.
---------------------------------------------------------
	Object[] toArray(Object[] a)
	
	지정된 배열에 Collection의 객체를 저장해서 반환한다.
---------------------------------------------------------


 				*** List 인테페이스 ***
---------------------------------------------------------
	void add(int index, Object element)
	boolean addAll(int index, Collection c)
	
	지정된 위치(index)에 객체(element) 또는 컬렉션에 포함된
	객체들을 추가한다.
---------------------------------------------------------
	Object get(int index)
	
	지정된 위치(index)에 있는 객체를 반환한다.
---------------------------------------------------------
	int indexOf(Object o)
	
	지정된 객체의 위치(index)를 반환한다.
	(List의 첫 번째 요소부터 순방향으로 찾는다.)
---------------------------------------------------------
	int lastindexOf(Object o)
	
	지정된 객체의 위치(index)를 반환한다.
	(List의 마지막 요소부터 역방향으로 찾는다.)
---------------------------------------------------------
	Listlterator listlterator()
	Listlterator listltrator(int index)
	
	List의 객체에 접근할 수 있는 Listlterator를 반환한다.
---------------------------------------------------------
	Object remove(int index)
	
	지정된 위치(index)에 있는 객체를 삭제하고 삭제된 객체를 반환한다.
---------------------------------------------------------
	Object set(int index, Object element)
	
	지정된 위치(index)에 객체(element)를 저장한다.
---------------------------------------------------------
	Void sort(Comparator c)
	
	지정된 비교자(comparator)로 List를 정렬한다.
---------------------------------------------------------
	List subList(int fromIndex, int toIndex)
	
	지정된 범위(fromIndex부터 toIndex)에 있는 객체를 반환한다.
---------------------------------------------------------



 				***	Map 인터페이스 ***
---------------------------------------------------------
	void clear()
	
	Map의 모든 객체를 삭제한다.
---------------------------------------------------------
	boolean containsKey(Object key)
	
	지정된 key객체와 일치하는 Map의 key객체가 있는지 확인한다.
---------------------------------------------------------
	boolean containsValue(Object value)
	
	지정된 value객체와 일치하는 Map의 value객체가 있는지 확인한다.
---------------------------------------------------------
	Set entrySet()
	
	Map에 저장되어 있는 key-value쌍을 Mawp.Entry타입의 객체로
	저장한 Set으로 반환한다.
---------------------------------------------------------
	boolean equals(Object o)
	
	동일한 Map인지 비교한다.
---------------------------------------------------------
	Object get(Object key)
	
	지정한 key객체에 대응하는 value객체를 찾아서 반환한다.
---------------------------------------------------------
	int hashCode()
	
	해시코드를 반환한다.
---------------------------------------------------------
	boolean isEmpty()
	
	Map이 비어있는지 확인한다.
---------------------------------------------------------
	Set keySet()
	
	Map에 저장된 모든 key객체를 반환한다.
---------------------------------------------------------
	Object put(Object key, Object value)
	
	Map에 value객체를 key객체에 연결(mapping)하여 저장한다.
---------------------------------------------------------
	void putAll(Map t)
	
	지정된 Map의 모든 key-value쌍을 추가한다.
---------------------------------------------------------
	Object remove(Object key)
	
	지정한 key객체와 일치하는 key-value객체를 삭제한다.
---------------------------------------------------------
	int size()
	
	Map에 저장된 key-value 쌍의 개수를 반환한다.
---------------------------------------------------------
	Collection values()
	
	Map에 저장된 모든 value 객체를 반환한다.
---------------------------------------------------------

*/
		
		
	}
}
